————————————————————————————————————————————————————————————————————————————————————————————————
Hardy-Weinberg Frequencies
————————————————————————————————————————————————————————————————————————————————————————————————
- To remove effects of random chance and genetic drift, the population size must be infinite
- non-overlapping generations simplifies bookkeeping (old gen dies immediately after new gen)
- sexual reproduction is random, no sex determined for each entity, everything is like “molecules bouncing off each other”
- none of the 4 forces in nature, but why?
+ consider a map, you want to go from point a to point b and you use a map
+ the map is not realistic of the real world, it is a simplified version of an area, but helps you navigate
+ a one-to-one map would be completely useless since it would be unrealistic to use.

- what will the next genotype frequencies look like?
+ considering a infinitely size gamete pool, 40% is type A1, 60% is type A2
+ A1, A1 = 0.4 x 0.4 = 0.16 = 16%
+ A1, A2 = (0.4 x 0.6) or (0.6 x 0.4) = 0.48 = 48%
+ A1, A1 = 0.46 x 0.6 = 0.36 = 36%

a1 alleles = 16% + (48/2)% = 40%
a2 alleles = 36% + (48/2)% = 60%

so allele frequencies do not change. i.e. no evolution

the genotype frequencies (Hardy Weinberg) change, but the allele frequencies remain constant

the HW model states this exactly and that the genotype frequencies converge to what we call “HW frequencies” within one generation.


————————————————————————————————————————————————————————————————————————————————————————————————
Hardy-Weinberg Principles in Javascript
————————————————————————————————————————————————————————————————————————————————————————————————

f(A1) = p = 1 - q (frequency of A1)
f(A2) = q = 1 - p (frequency of A2)

f(A1A1) = p x p = p^2
f(A2A2) = q x q = q^2
f(A1A2) = (p x q) + (q x p) = 2pq

so p^2 + 2pq + q^2 = 1

<!DOCTYPE html>

<html>
  <head>
    <script>
      var a1a1 = 0.15;
      var a2a2 = 0.35;
      var a1a2 = 1 - (a1a1 + a2a2);

      var p = a1a1 + (a1a2/2);
      var q = 1 - p
    </script>
  </head>
  <body>

  </body>
</html>

————————————————————————————————————————————————————————————————————————————————————————————————
Hardy-Weinberg Principles in Javascript - Calculating the next generation
————————————————————————————————————————————————————————————————————————————————————————————————

calculate the next generation as we have done before

<!DOCTYPE html>

<html>
  <head>
    <script>
      var a1a1 = 0.15;
      var a2a2 = 0.35;
      var a1a2 = 1 - (a1a1 + a2a2);

      var p = a1a1 + (a1a2/2);
      var q = 1 - p

      console.log("generation 0:", a1a1, a1a2, a2a2);

      // calculating next generation
      a1a1 = p * p
      a1a2 = 2 * p * q
      a2a2 = q * q

      console.log("generation 1:", a1a1, a1a2, a2a2);

      // calculating next generation
      a1a1 = p * p
      a1a2 = 2 * p * q
      a2a2 = q * q

      console.log("generation 2:", a1a1, a1a2, a2a2);

      // calculating next generation
      a1a1 = p * p
      a1a2 = 2 * p * q
      a2a2 = q * q

      console.log("generation 3:", a1a1, a1a2, a2a2);

      // calculating next generation
      a1a1 = p * p
      a1a2 = 2 * p * q
      a2a2 = q * q

      console.log("generation 4:", a1a1, a1a2, a2a2);

      // calculating next generation
      a1a1 = p * p
      a1a2 = 2 * p * q
      a2a2 = q * q

      console.log("generation 5:", a1a1, a1a2, a2a2);
    </script>
  </head>
  <body>

  </body>
</html>

we can use functions to prevent copy and pasting code

————————————————————————————————————————————————————————————————————————————————————————————————
Hardy-Weinberg Principles in Javascript - Javascript functions
————————————————————————————————————————————————————————————————————————————————————————————————


————————————————————————————————————————————————————————————————————————————————————————————————
Hardy-Weinberg Principles in Javascript - Generic Functions and return values
————————————————————————————————————————————————————————————————————————————————————————————————
